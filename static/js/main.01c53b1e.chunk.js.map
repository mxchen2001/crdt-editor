{"version":3,"sources":["utils/PatienceDiff.js","ThemeContext.js","TextEditor.js","static/LanguageIcon.js","EditorWrapper.js","App.js","index.js"],"names":["patienceDiff","aLines","bLines","diffPlusFlag","findUnique","arr","lo","hi","lineMap","Map","i","line","has","get","count","index","set","forEach","val","key","map","delete","uniqueCommon","aArray","aLo","aHi","bArray","bLo","bHi","ma","mb","indexA","indexB","result","deleted","inserted","aMove","aMoveIndex","bMove","bMoveIndex","addToResult","aIndex","bIndex","push","length","addSubMatch","aHiTemp","uniqueCommonMap","size","recurseLCS","x","abMap","ja","prev","lcs","n","reverse","longestCommonSubsequence","lines","lineCountDeleted","lineCountInserted","lineCountMoved","ThemeContext","createContext","ThemeContextProvider","props","useState","language","setLanguage","dark","setDark","status","setStatus","Provider","value","children","TextEditor","documentId","useParams","id","socket","setSocket","document","setDocument","editor","setEditor","displayValue","setDisplayValue","syncStates","setSyncStates","lineNumber","column","cursorPosition","setCursorPosition","setPeerCursorPositions","packet","setPacket","setMonaco","useContext","editorLanguage","setEditorLanguage","useEffect","s","io","d","Automerge","change","init","doc","text","Text","initSyncState","emit","disconnect","handler","data","getPosition","split","slice","join","getCursorPosition","JSON","parse","state","changes","messages","cursorData","position","binaryArrayChanges","binArr","Uint8Array","Object","values","num","parsedSyncMessages","binaryArrayMessages","receiveSyncMessage","newDoc","newSyncState","applyChanges","changedDoc","newValue","toString","clone","on","off","timer","setTimeout","updatedChanges","getChanges","generateSyncMessage","updatedSyncState","updatedMessage","newPacket","stringify","e","clearTimeout","interval","setInterval","clearInterval","model","getModel","getValue","executeEdits","forceMoveMarkers","range","getFullModelRange","setPosition","className","height","theme","onMount","monaco","onChange","event","ops","previous","current","difference","deltaSteps","currRetainCount","currInsertCount","currDeleteCount","element","insertElement","insert","deltaActions","previousPointer","currentPointer","keys","monacoToDeltas","pointer","temp","retain","deleteAt","splitString","insertAt","LANGUAGE_ICON_MAP","style","color","LanguageIcon","EditorWrapper","open","setOpen","filter","setFilter","handleClose","Modal","onClose","disableAutoFocus","disableEnforceFocus","BackdropProps","invisible","type","placeholder","target","languages","item","includes","onClick","toUpperCase","checked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","width","marginLeft","App","path","to","uuidV4","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01c53b1e.chunk.js","sourcesContent":["\n/**\n * program: \"patienceDiff\" algorithm implemented in javascript.\n * author: Jonathan Trent\n * version: 2.0\n *\n * use:  patienceDiff( aLines[], bLines[], diffPlusFlag)\n *\n * where:\n *      aLines[] contains the original text lines.\n *      bLines[] contains the new text lines.\n *      diffPlusFlag if true, returns additional arrays with the subset of lines that were\n *          either deleted or inserted.  These additional arrays are used by patienceDiffPlus.\n *\n * returns an object with the following properties:\n *      lines[] with properties of:\n *          line containing the line of text from aLines or bLines.\n *          aIndex referencing the index in aLine[].\n *          bIndex referencing the index in bLines[].\n *              (Note:  The line is text from either aLines or bLines, with aIndex and bIndex\n *               referencing the original index. If aIndex === -1 then the line is new from bLines,\n *               and if bIndex === -1 then the line is old from aLines.)\n *          moved is true if the line was moved from elsewhere in aLines[] or bLines[].\n *      lineCountDeleted is the number of lines from aLines[] not appearing in bLines[].\n *      lineCountInserted is the number of lines from bLines[] not appearing in aLines[].\n *      lineCountMoved is the number of lines moved outside of the Longest Common Subsequence.\n *\n */\n\n export function patienceDiff(aLines, bLines, diffPlusFlag) {\n   \n    //\n    // findUnique finds all unique values in arr[lo..hi], inclusive.  This\n    // function is used in preparation for determining the longest common\n    // subsequence.  Specifically, it first reduces the array range in question\n    // to unique values.\n    //\n    // Returns an ordered Map, with the arr[i] value as the Map key and the\n    // array index i as the Map value.\n    // \n    function findUnique(arr, lo, hi) {\n      \n      var lineMap = new Map();\n      \n      for (let i = lo; i <= hi; i++) {\n        let line = arr[i];\n        if (lineMap.has(line)) {\n          lineMap.get(line).count++;\n          lineMap.get(line).index = i;\n        } else {\n          lineMap.set(line, {count:1, index: i});\n        }  \n      }\n      \n      lineMap.forEach((val, key, map) => {\n        if (val.count !== 1) {\n          map.delete(key);\n        } else {\n          map.set(key, val.index);\n        }\n      });\n      \n      return lineMap;\n    }\n  \n    //\n    // uniqueCommon finds all the unique common entries between aArray[aLo..aHi]\n    // and bArray[bLo..bHi], inclusive.  This function uses findUnique to pare\n    // down the aArray and bArray ranges first, before then walking the comparison\n    // between the two arrays.\n    //\n    // Returns an ordered Map, with the Map key as the common line between aArray\n    // and bArray, with the Map value as an object containing the array indexes of \n    // the matching unique lines.\n    //\n    function uniqueCommon(aArray, aLo, aHi, bArray, bLo, bHi) {\n      let ma = findUnique(aArray, aLo, aHi);\n      let mb = findUnique(bArray, bLo, bHi);\n      \n      ma.forEach((val, key, map) => {\n        if (mb.has(key)) {\n          map.set(key, {indexA: val, indexB: mb.get(key)});\n        } else {\n          map.delete(key);\n        }\n      });\n      \n      return ma;\n    }\n  \n    //\n    // longestCommonSubsequence takes an ordered Map from the function uniqueCommon\n    // and determines the Longest Common Subsequence (LCS).\n    //\n    // Returns an ordered array of objects containing the array indexes of the \n    // matching lines for a LCS.\n    //\n    function longestCommonSubsequence(abMap) {\n      \n      var ja = [];\n      \n      // First, walk the list creating the jagged array.\n      abMap.forEach((val, key, map) => {\n        let i = 0;\n        while (ja[i] && ja[i][ja[i].length-1].indexB < val.indexB) {\n          i++;\n        }\n        \n        if (!ja[i]) {\n          ja[i] = [];\n        }\n  \n        if (0 < i) {\n          val.prev = ja[i-1][ja[i-1].length - 1];\n        }\n  \n        ja[i].push(val);\n      });\n      \n      // Now, pull out the longest common subsequence.\n      var lcs = [];\n      if (0 < ja.length) {\n        let n = ja.length - 1;\n        lcs = [ja[n][ja[n].length - 1]];\n        while (lcs[lcs.length - 1].prev) {\n          lcs.push(lcs[lcs.length - 1].prev);\n        }\n      }\n      \n      return lcs.reverse();\n    }\n  \n    // \"result\" is the array used to accumulate the aLines that are deleted, the\n    // lines that are shared between aLines and bLines, and the bLines that were\n    // inserted.\n    let result = [];\n    let deleted = 0;\n    let inserted = 0;\n    \n    // aMove and bMove will contain the lines that don't match, and will be returned\n    // for possible searching of lines that moved.\n    \n    let aMove = [];\n    let aMoveIndex = [];\n    let bMove = [];\n    let bMoveIndex = [];\n    \n    //\n    // addToResult simply pushes the latest value onto the \"result\" array.  This\n    // array captures the diff of the line, aIndex, and bIndex from the aLines\n    // and bLines array.\n    //\n    function addToResult(aIndex, bIndex) {\n      \n      if (bIndex < 0) {\n        aMove.push(aLines[aIndex]);\n        aMoveIndex.push(result.length);\n        deleted++;\n      } else if (aIndex < 0) {\n        bMove.push(bLines[bIndex]);\n        bMoveIndex.push(result.length);\n        inserted++;\n      }\n  \n      result.push({line: 0 <= aIndex ? aLines[aIndex] : bLines[bIndex], aIndex: aIndex, bIndex: bIndex});\n    }\n    \n    //\n    // addSubMatch handles the lines between a pair of entries in the LCS.  Thus,\n    // this function might recursively call recurseLCS to further match the lines\n    // between aLines and bLines.\n    //\n    function addSubMatch(aLo, aHi, bLo, bHi) {\n      \n      // Match any lines at the beginning of aLines and bLines.\n      while (aLo <= aHi && bLo <= bHi && aLines[aLo] === bLines[bLo]) {\n        addToResult(aLo++, bLo++);\n      }\n  \n      // Match any lines at the end of aLines and bLines, but don't place them\n      // in the \"result\" array just yet, as the lines between these matches at\n      // the beginning and the end need to be analyzed first.\n      let aHiTemp = aHi;\n      while (aLo <= aHi && bLo <= bHi && aLines[aHi] === bLines[bHi]) {\n        aHi--;\n        bHi--;\n      }\n      \n      // Now, check to determine with the remaining lines in the subsequence\n      // whether there are any unique common lines between aLines and bLines.\n      //\n      // If not, add the subsequence to the result (all aLines having been\n      // deleted, and all bLines having been inserted).\n      //\n      // If there are unique common lines between aLines and bLines, then let's\n      // recursively perform the patience diff on the subsequence.\n      let uniqueCommonMap = uniqueCommon(aLines, aLo, aHi, bLines, bLo, bHi);\n      if (uniqueCommonMap.size === 0) {\n        while (aLo <= aHi) {\n          addToResult(aLo++, -1);\n        }\n        while (bLo <= bHi) {\n          addToResult(-1, bLo++);\n        }    \n      } else {\n        recurseLCS(aLo, aHi, bLo, bHi, uniqueCommonMap);\n      }\n      \n      // Finally, let's add the matches at the end to the result.\n      while (aHi < aHiTemp) {\n        addToResult(++aHi, ++bHi);\n      } \n    }\n  \n    //\n    // recurseLCS finds the longest common subsequence (LCS) between the arrays\n    // aLines[aLo..aHi] and bLines[bLo..bHi] inclusive.  Then for each subsequence\n    // recursively performs another LCS search (via addSubMatch), until there are\n    // none found, at which point the subsequence is dumped to the result.\n    //\n    function recurseLCS(aLo, aHi, bLo, bHi, uniqueCommonMap) {\n      var x = longestCommonSubsequence(uniqueCommonMap || uniqueCommon(aLines, aLo, aHi, bLines, bLo, bHi));\n      if (x.length === 0) {\n        addSubMatch(aLo, aHi, bLo, bHi);\n      } else {\n        if (aLo < x[0].indexA || bLo < x[0].indexB) {\n          addSubMatch(aLo, x[0].indexA-1, bLo, x[0].indexB-1);\n        }\n  \n        let i;\n        for (i = 0; i < x.length - 1; i++) {\n          addSubMatch(x[i].indexA, x[i+1].indexA-1, x[i].indexB, x[i+1].indexB-1);\n        }\n        \n        if (x[i].indexA <= aHi || x[i].indexB <= bHi) {\n          addSubMatch(x[i].indexA, aHi, x[i].indexB, bHi);\n        }\n      }\n    }\n    \n    recurseLCS(0, aLines.length-1, 0, bLines.length-1);\n    \n    if (diffPlusFlag) {\n      return {lines: result, lineCountDeleted: deleted, lineCountInserted: inserted, lineCountMoved: 0, aMove: aMove, aMoveIndex: aMoveIndex, bMove: bMove, bMoveIndex: bMoveIndex};\n    }\n    \n    return {lines: result, lineCountDeleted: deleted, lineCountInserted: inserted, lineCountMoved:0};\n  }\n  \n  /**\n   * program: \"patienceDiffPlus\" algorithm implemented in javascript.\n   * author: Jonathan Trent\n   * version: 2.0\n   *\n   * use:  patienceDiffPlus( aLines[], bLines[] )\n   *\n   * where:\n   *      aLines[] contains the original text lines.\n   *      bLines[] contains the new text lines.\n   *\n   * returns an object with the following properties:\n   *      lines[] with properties of:\n   *          line containing the line of text from aLines or bLines.\n   *          aIndex referencing the index in aLine[].\n   *          bIndex referencing the index in bLines[].\n   *              (Note:  The line is text from either aLines or bLines, with aIndex and bIndex\n   *               referencing the original index. If aIndex === -1 then the line is new from bLines,\n   *               and if bIndex === -1 then the line is old from aLines.)\n   *          moved is true if the line was moved from elsewhere in aLines[] or bLines[].\n   *      lineCountDeleted is the number of lines from aLines[] not appearing in bLines[].\n   *      lineCountInserted is the number of lines from bLines[] not appearing in aLines[].\n   *      lineCountMoved is the number of lines moved outside of the Longest Common Subsequence.\n   *\n   */\n   \n export function patienceDiffPlus( aLines, bLines ) {\n  \n    let difference = patienceDiff( aLines, bLines, true );\n  \n    let aMoveNext = difference.aMove;\n    let aMoveIndexNext = difference.aMoveIndex;\n    let bMoveNext = difference.bMove;\n    let bMoveIndexNext = difference.bMoveIndex;\n     \n    delete difference.aMove;\n    delete difference.aMoveIndex;\n    delete difference.bMove;\n    delete difference.bMoveIndex;\n      \n    do {\n  \n      let aMove = aMoveNext;\n      let aMoveIndex = aMoveIndexNext;\n      let bMove = bMoveNext;\n      let bMoveIndex = bMoveIndexNext;\n      // let foundFlag = false;\n      \n      aMoveNext = [];\n      aMoveIndexNext = [];\n      bMoveNext = [];\n      bMoveIndexNext = [];\n        \n      let subDiff = patienceDiff( aMove, bMove );\n  \n      var lastLineCountMoved = difference.lineCountMoved;\n      \n      subDiff.lines.forEach( (v, i) => {\n  \n        if (0 <= v.aIndex && 0 <= v.bIndex) {\n          difference.lines[aMoveIndex[v.aIndex]].moved = true;\n          difference.lines[bMoveIndex[v.bIndex]].aIndex = aMoveIndex[v.aIndex];\n          difference.lines[bMoveIndex[v.bIndex]].moved = true;\n          difference.lineCountInserted--;\n          difference.lineCountDeleted--;\n          difference.lineCountMoved++;\n          // foundFlag = true;\n        } else if (v.bIndex < 0) {\n          aMoveNext.push(aMove[v.aIndex]);\n          aMoveIndexNext.push(aMoveIndex[v.aIndex]);\n        } else {  // if (v.aIndex < 0)\n          bMoveNext.push(bMove[v.bIndex]);\n          bMoveIndexNext.push(bMoveIndex[v.bIndex]);\n        }\n  \n      });\n      \n    } while ( 0 < difference.lineCountMoved - lastLineCountMoved );\n  \n    return difference;\n  }\n  ","import React, {Component, createContext, useState} from 'react'\n\nexport const ThemeContext = createContext()\n\nfunction ThemeContextProvider(props) {\n    const [language, setLanguage] = useState('javascript')\n    const [dark, setDark] = useState(true);\n    const [status, setStatus] = useState(false); //  false desynced and true is synced\n\n    return (\n        <ThemeContext.Provider value={{language, setLanguage, dark, setDark, status, setStatus}}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeContextProvider","import { useEffect, useState, useContext } from \"react\"\nimport { io } from \"socket.io-client\"\nimport { useParams } from \"react-router-dom\"\n\nimport Automerge from 'automerge'\n\nimport './TextEditor.css'\n\nimport Editor, { Range } from \"@monaco-editor/react\"\nimport { patienceDiff } from './utils/PatienceDiff';\nimport { ThemeContext } from \"./ThemeContext\"\n\nconst SAVE_INTERVAL_MS = 20000\n\n/**\n * Turn monaco editor delta into a quill delta\n * \n * @param {string} previous string \n * @param {string} current string\n */\nfunction monacoToDeltas(previous, current) {\n  const difference = patienceDiff(previous.split(''), current.split(''), false)\n\n  const deltaSteps = []\n\n  let currRetainCount = 0\n  let currInsertCount = 0\n  let currDeleteCount = 0\n\n  difference.lines.forEach((element, index) => {\n    if (element.aIndex >= 0 && element.bIndex >= 0) {\n      currRetainCount++;\n      currInsertCount = 0;\n      currDeleteCount = 0;\n      deltaSteps.push({ 'retain': currRetainCount })\n      return\n    }\n\n    if (element.aIndex >= 0 && element.bIndex <= 0) {\n      currDeleteCount++;\n      currInsertCount = 0;\n      currRetainCount = 0;\n      deltaSteps.push({ 'delete': currDeleteCount })\n    }\n    if (element.aIndex <= 0 && element.bIndex >= 0) {\n      let insertElement = '';\n      if (currInsertCount > 0 && index > 0) {\n        insertElement = deltaSteps[index - 1].insert + element.line;\n      } else {\n        insertElement = element.line;\n      }\n      currInsertCount++;\n      currDeleteCount = 0;\n      currRetainCount = 0;\n\n      deltaSteps.push({ 'insert': insertElement })\n    }\n  });\n\n  let deltaActions = [];\n  if (deltaSteps.length == 1) {\n    deltaActions.push(deltaSteps[0]);\n  }\n\n  for (let previousPointer = 0; previousPointer < deltaSteps.length - 1; previousPointer++) {\n    let currentPointer = previousPointer + 1;\n    if (Object.keys(deltaSteps[currentPointer])[0] !== Object.keys(deltaSteps[previousPointer])[0]) {\n      deltaActions.push(deltaSteps[previousPointer]);\n    }\n    if (currentPointer == deltaSteps.length - 1) {\n      deltaActions.push(deltaSteps[currentPointer]);\n    }\n  }\n\n  return deltaActions;\n}\n\n/**\n * Convert monaco cursor position to an index\n * @param {string} text the current text\n * @param {number} lineNumber the line number, 0 indexed\n * @param {number} column the column index, 0 indexed\n */\nfunction getCursorPosition(text, lineNumber, column) {\n  let line = text.split('\\n').slice(0, lineNumber);\n  let index = line.join('\\n').length + column;\n  return index;\n}\n\nfunction calculateCursorPosition(text, position) {\n  let line = text.split('\\n').map((element) => element + '\\n');\n  // // console.log(line);\n  let counter = 0;\n  for (let i = 0; i < line.length; i++) {\n    const lineContent = line[i];\n    for (let j = 0; j < lineContent.length; j++) {\n      if (counter == position) {\n        return { line: i, column: j };\n      }\n      counter++;\n    }\n    counter++;\n  }\n\n  return { line: -1, column: -1 };\n}\n\nexport default function TextEditor(props) {\n  const { id: documentId } = useParams()\n  const [socket, setSocket] = useState()\n  const [document, setDocument] = useState()\n  const [editor, setEditor] = useState()\n\n  const [displayValue, setDisplayValue] = useState('')\n\n  // a hash of [source][docId] containing in-memory sync states\n  const [syncStates, setSyncStates] = useState({})\n  // const [cursorElement, setCursorElement] = useState()\n\n  const [cursorPosition, setCursorPosition] = useState({ lineNumber: 1, column: 1 })\n\n  const [peerCursorPositions, setPeerCursorPositions] = useState({})\n  const [packet, setPacket] = useState(null)\n\n  const [monaco, setMonaco] = useState(null)\n\n\n  const { language: editorLanguage, setLanguage: setEditorLanguage, status, setStatus } = useContext(ThemeContext)\n\n  // init\n  useEffect(() => {\n    const s = io(\"https://obscure-sands-22564.herokuapp.com/\")\n\n    setSocket(s)\n    // console.log('socket connected')\n    let d = Automerge.change(Automerge.init(), doc => {\n      doc.text = new Automerge.Text()\n    })\n    setDocument(d)\n    setSyncStates(Automerge.initSyncState())\n    // if (socket == null) return\n    s.emit(\"get-document\", documentId)\n    return () => {\n      setStatus(false)\n      s.disconnect()\n    }\n  }, [])\n\n  // Receive and Apply Changes\n  useEffect(() => {\n    if (socket == null || editor == null) return\n\n    const handler = (data) => {\n      setStatus(true)\n      // // console.log('received packet')\n      const { lineNumber: line, column: column } = editor.getPosition()\n      // // console.log(`${line}, ${column}`)\n\n      setCursorPosition({ lineNumber: line, column: column })\n      const currentCursorPosition = getCursorPosition(displayValue, line - 1, column - 1)\n      // // console.log(currentCursorPosition)\n\n      const { state, changes, messages, language, cursorData } = JSON.parse(data)\n\n      // console.log(cursorData)\n\n      // // console.log(peerCursorPositions)\n\n      if (cursorData != null) {\n        setPeerCursorPositions((prev) => ({ ...prev, [cursorData.id]: cursorData.position }))\n      }\n\n      if (language != null && editorLanguage !== language) {\n        setEditorLanguage(language)\n      }\n\n      if (state == null || changes == null || messages == null) {\n        return\n      }\n\n      // console.log('hello')\n\n      const parsedSyncChanges = JSON.parse(changes)\n      let binaryArrayChanges = parsedSyncChanges.map((binArr) => new Uint8Array((Object.values(binArr).map(num => num))))\n      const parsedSyncMessages = JSON.parse(messages)\n      let binaryArrayMessages = Object.values(parsedSyncMessages).map((num) => (num))\n\n      let [newDoc, newSyncState,] = Automerge.receiveSyncMessage(document, state, new Uint8Array(binaryArrayMessages))\n\n      let [changedDoc,] = Automerge.applyChanges(newDoc, binaryArrayChanges)\n      // setCursorElement(changedDoc.text.elems[currentCursorPosition] ? changedDoc.text.elems[currentCursorPosition]['elemId'] : '')\n      const newValue = changedDoc.text.toString()\n      setDocument(Automerge.clone(changedDoc))\n      setDisplayValue(newValue)\n      setSyncStates(newSyncState)\n    }\n    socket.on(\"receive-changes\", handler)\n\n    return () => {\n      socket.off(\"receive-changes\", handler)\n    }\n  }, [socket, document, editor])\n\n  // Synchronize Editor\n  useEffect(() => {\n    if (socket == null || editor == null) return\n\n\n    const handler = () => {\n      setStatus(true)\n      const timer = setTimeout(() => {\n        try {\n          let updatedChanges = Automerge.getChanges(Automerge.init(), Automerge.clone(document))\n          let [updatedSyncState, updatedMessage] = Automerge.generateSyncMessage(document, syncStates)\n\n          const newPacket = {\n            state: updatedSyncState,\n            messages: JSON.stringify(updatedMessage),\n            changes: JSON.stringify(updatedChanges),\n            language: props.language,\n            cursorData: {\n              id: socket.id,\n              position: editor.getPosition(),\n            }\n          }\n\n          setPacket(newPacket)\n        } catch (e) {\n          setStatus(false)\n        }\n      }, 2000);\n      return () => clearTimeout(timer);\n    }\n\n    socket.on(\"synchronize-editor\", handler)\n\n    return () => {\n      socket.off(\"synchronize-editor\", handler)\n    }\n  }, [socket, document])\n\n  // Synchronize Language\n  useEffect(() => {\n    if (socket == null || editor == null) return\n    const newPacket = {\n      state: null,\n      messages: null,\n      changes: null,\n      language: editorLanguage,\n    }\n\n    setPacket(newPacket)\n  }, [editorLanguage])\n\n  // Emit Changes\n  useEffect(() => {\n    if (packet == null || socket == null) return\n\n    const interval = setInterval(() => {\n      socket.emit(\"send-changes\", JSON.stringify(packet), documentId)\n      setPacket(null)\n    }, 250)\n\n    return () => {\n      clearInterval(interval)\n    }\n\n  }, [packet])\n\n  // Apply Editor Changes\n  useEffect(() => {\n    if (socket == null || editor == null) return\n    const model = editor.getModel()\n    if (model == null) return;\n\n    if (model.getValue() == displayValue) return\n    // model.pushEditOperations([],\n    editor.executeEdits('',\n      [\n        {\n          forceMoveMarkers: false,\n          range: model.getFullModelRange(),\n          text: displayValue\n        }\n      ], () => null,\n    );\n\n    editor.setPosition(cursorPosition)\n\n    // let updatedCursorPosition = -1\n    // // find the cursor position\n    // document.text.elems.forEach((element, index) => {\n    //   if (element.elemId === cursorElement) {\n    //     updatedCursorPosition = index\n    //   }\n    // })\n\n    // if (updatedCursorPosition !== -1) {\n    //   const { line, column } = calculateCursorPosition(displayValue, updatedCursorPosition)\n    // }\n\n\n  }, [displayValue])\n\n  // Synchorize Cursors\n  // useEffect(() => {\n  //   if (socket == null || editor == null) return\n\n  //   editor.onDidChangeCursorPosition((event) => {\n  //     // console.log(event)\n  //     const { position, reason, source } = event\n\n  //     if (source === 'modelChange' || source === 'api') return\n\n  //     if ((source === 'keyboard' || source === 'mouse') && reason === 3) {\n\n  //       // console.log('hi')\n  //       setCursorPosition(position)\n  //       // // console.log(source)\n  //       // // console.log(`${position.lineNumber}, ${position.column}`)\n\n  //       const newPacket = {\n  //         state: null,\n  //         messages: null,\n  //         changes: null,\n  //         language: null,\n  //         cursorData: {\n  //           id: socket.id,\n  //           position: position,\n  //         }\n  //       }\n  //       setPacket(newPacket)\n  //     }\n\n  //   })\n\n\n  // }, [editor])\n\n  // Apply Peer Cursors\n  // useEffect(() => {\n  //   if (socket == null || editor == null) return\n\n  //   // console.log(peerCursorPositions)\n\n  //   // editor.deltaDecorations([], [{ range: editor.getModel().getFullModelRange(), options: {} }]);\n  //   editor.getModel().setValue(editor.getModel().getValue())\n  //   // editor.deltaDecorations([],\n  //   //   Object.entries(peerCursorPositions).map(([id, position]) => {\n  //   //     if (id == undefined) return null\n  //   //     const { lineNumber, column } = position\n  //   //     return {\n  //   //       range: new monaco.Range(lineNumber, column, lineNumber, column),\n  //   //       options: { className: 'my-cursor' }\n  //   //     }\n  //   //   }).filter((el) => el !== null)\n  //   // );\n\n\n  // }, [peerCursorPositions])\n\n  return <div className=\"container\">\n    <Editor\n      height={'calc(100vh - 63px)'}\n      theme={props.theme}\n      language={editorLanguage}\n      onMount={(editor, monaco) => {\n        setEditor(editor)\n        setMonaco(monaco)\n      }} \n      onChange={(value, event) => {\n        if (value === document.text.toString() || value === displayValue) return\n        const ops = monacoToDeltas(document.text.toString(), value)\n\n        let pointer = 0;\n        try {\n          let temp = Automerge.change(document, \"change\", doc => {\n            if (!doc.text) {\n              doc.text = new Automerge.Text()\n            }\n\n            for (let i = 0; i < ops.length; i++) {\n              if (ops[i].retain) {\n                pointer += ops[i].retain;\n              } else if (ops[i].delete) {\n                doc.text.deleteAt(pointer, ops[i].delete)\n              } else if (ops[i].insert) {\n                const splitString = ops[i].insert.split('')\n                doc.text.insertAt(pointer, ...splitString)\n                pointer += ops[i].insert.length;\n              }\n            }\n          })\n\n          let updatedChanges = Automerge.getChanges(Automerge.init(), Automerge.clone(temp))\n          let [updatedSyncState, updatedMessage] = Automerge.generateSyncMessage(temp, syncStates)\n\n          const newPacket = {\n            state: updatedSyncState,\n            messages: JSON.stringify(updatedMessage),\n            changes: JSON.stringify(updatedChanges),\n            language: props.language,\n            cursorData: {\n              id: socket.id,\n              position: editor.getPosition(),\n            }\n          }\n\n          setPacket(newPacket)\n          setDocument(temp)\n          setSyncStates(updatedSyncState)\n          setDisplayValue(value)\n\n          if (!status) setStatus(true)\n        } catch (e) {\n          setStatus(false)\n        }\n        // console.log(editor.getPosition())\n      }}\n    />\n  </div>\n}\n","import { FaAlignLeft } from \"react-icons/fa\";\n\n\nimport { \n    AiOutlineHtml5,\n    AiFillDatabase\n} from \"react-icons/ai\";\n\n\nimport { \n    DiWindows,\n    DiCss3,\n    DiFsharp,\n    DiGo,\n    DiLess,\n    DiPhp,\n} from \"react-icons/di\";\n\nimport { \n    SiC,\n    SiCplusplus,\n    SiCoffeescript,\n    SiCsharp,\n    SiDocker,\n    SiJava,\n    SiJavascript,\n    SiKotlin,\n    SiLua,\n    SiMarkdown,\n    SiPerl,\n    SiPostgresql,\n    SiPowershell,\n    SiPython,\n    SiR,\n    SiRedis,\n    SiRuby,\n    SiRust,\n    SiSwift,\n    SiTypescript,\n} from \"react-icons/si\";\n\nimport { \n    GrGraphQl,\n    GrMysql\n} from \"react-icons/gr\";\n\nimport { \n    VscJson,\n} from \"react-icons/vsc\";\n\nimport { \n    BsTerminalFill,\n} from \"react-icons/bs\";\n\n\n\n\nconst LANGUAGE_ICON_MAP = {\n    'bat' : <DiWindows style={{color: '#61a5c1'}}/>,\n    'c' : <SiC style={{color: '#61a5c1'}}/>,\n    'cpp' : <SiCplusplus style={{color: '#6d94c7'}}/>,\n    'css' : <DiCss3 style={{color: '#3570b0'}}/>,\n    'coffeescript' : <SiCoffeescript style={{color: 'hsl(223, 28%, 53%)'}}/>,\n    'csharp' : <SiCsharp style={{color: '#4a9738'}}/>,\n    'dockerfile' : <SiDocker style={{color: '#4598c2'}}/>,\n    'fsharp' : <DiFsharp style={{color: '#5ab0d0'}}/>,\n    'go' : <DiGo/>,\n    'graphql' : <GrGraphQl style={{color: '#c82a90'}}/>,\n    'html' : <AiOutlineHtml5 style={{color: '#d86b3a'}}/>,\n    'java' : <SiJava style={{color: '#d23c35'}}/>,\n    'javascript' : <SiJavascript style={{color: '#e5d565'}}/>,\n    'json' : <VscJson style={{color: '#e5d565'}}/>,\n    'kotlin' : <SiKotlin style={{color: '#7c77d2'}}/>,\n    'less' : <DiLess/>,\n    'lua' : <SiLua style={{color: '\thsla(241, 80%, 65%, 0.8)'}}/>,\n    'markdown' : <SiMarkdown/>,\n    'mysql' : <GrMysql style={{color: 'hsl(204, 54%, 53%)'}}/>,\n    'perl' : <SiPerl style={{color: 'hsl(208, 61%, 43%)'}}/>,\n    'pgsql' : <SiPostgresql style={{color: '#3e6e89'}}/>,\n    'php' : <DiPhp/>,\n    'powershell' : <SiPowershell style={{color: '#3171b2'}}/>,\n    'python' : <SiPython style={{color: '#efd162'}}/>,\n    'r' : <SiR style={{color: '#61a5c1'}}/>,\n    'redis' : <SiRedis style={{color: '#c03b2b'}}/>,\n    'ruby' : <SiRuby style={{color: '#d53227'}}/>,\n    'rust' : <SiRust/>,\n    'shell' : <BsTerminalFill/>,\n    'sql' : <AiFillDatabase style={{color: '#f25890'}}/>,\n    'swift' : <SiSwift style={{color: '#efa251'}}/>,\n    'typescript' : <SiTypescript style={{color: '#4572c0'}}/>,\n}\n\nexport default function LanguageIcon(props) {\n    const language = props.language ? props.language : \"\";\n    if (language === \"\") {\n        return <FaAlignLeft />;\n    }\n\n    if (LANGUAGE_ICON_MAP[language]) {\n        return LANGUAGE_ICON_MAP[language];\n    }\n\n    return <FaAlignLeft />;\n\n}","import React, { useState, useContext } from 'react'\nimport './EditorWrapper.css'\nimport Editor from \"@monaco-editor/react\"\nimport { useParams } from \"react-router-dom\"\n\nimport { ThemeContext } from './ThemeContext'\n\nimport Modal from '@material-ui/core/Modal';\nimport TextEditor from './TextEditor'\n// Static Data\nimport languages from './static/languages.json'\nimport Switch from \"react-switch\";\n\n// Icons\nimport { VscRemote } from \"react-icons/vsc\";\nimport LanguageIcon from \"./static/LanguageIcon\"\n\n// create a wrapper for TextEditor\nfunction EditorWrapper() {\n    const { id: documentId } = useParams()\n\n    const { language, setLanguage, dark, setDark, status, setStatus } = useContext(ThemeContext)\n    // console.log(context)\n\n    // const [language, setLanguage] = useState(\"javascript\")\n    // const [dark, setDark] = useState(true);\n\n    const [open, setOpen] = useState(false);\n    const [filter, setFilter] = useState(\"\")\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setFilter(\"\");\n        setOpen(false);\n    };\n\n    const handleDark = () => {\n        setDark(!dark);\n    }\n\n    return (\n        <div className=\"editor-wrapper\">\n            <Modal\n                open={open}\n                onClose={handleClose}\n                disableAutoFocus={true}\n                disableEnforceFocus={true}\n                BackdropProps={{ invisible: true }}\n            >\n                <div className=\"search-modal\">\n                    <form className=\"language-search-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search language mode\"\n                            className=\"language-search\"\n                            onChange={e => setFilter(e.target.value)}\n                        />\n                    </form>\n                    <div className=\"language-search-result\">\n                        {languages.filter((item) => item.includes(filter)).map((item, index) => {\n                            return (\n                                <div className=\"language-selection\" key={'language-' + index} onClick={() => {\n                                    setLanguage(item);\n                                    handleClose();\n                                }}>\n                                    <div className=\"language-icon\">\n                                        <LanguageIcon language={item} />\n                                    </div>\n                                    {item.toUpperCase()[0] + item.slice(1)}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </Modal>\n\n            <div className=\"editor-header\">\n                <div className=\"editor-header-left\">\n                    Document ID: {documentId}\n                </div>\n\n                <div className=\"editor-header-right\">\n                    <span className={`status-dot ${status ? 'status-dot-sync' : 'status-dot-desync'}`}></span>\n                    <div className=\"status-message\">\n                        {status ? 'Synchronized' : 'Desynchronized'}\n                    </div>\n                    <label>\n                        <Switch\n                            checked={dark}\n                            onChange={handleDark}\n                            onColor=\"#4b99f0\"\n                            onHandleColor=\"#fff\"\n                            handleDiameter={18}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n                            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n                            height={18}\n                            width={40}\n                            className=\"react-switch\"\n                            id=\"material-switch\"\n                        />\n                    </label>\n                </div>\n            </div>\n\n            <div className=\"editor-body\">\n                <TextEditor\n                    theme={dark ? \"vs-dark\" : \"vs\"}\n                    language={language}\n                />\n                {/* <Editor\n                    theme={dark ? \"vs-dark\" : \"vs\"}\n                    language={language}\n                    defaultValue=\"// some comment\"\n                /> */}\n            </div>\n\n            <div className=\"editor-footer\">\n                <div className=\"editor-footer-version editor-footer-text\">\n                    <VscRemote />\n                    <a style={{ marginLeft: '7px' }}>\n                        MergePad\n                    </a>\n                </div>\n                {/* <div className=\"editor-footer-text\">\n                    <a href='https://www.freepik.com/vectors/man' style={{ fontSize: '13px', textDecoration: 'none', color: '#607a85'}}>Man vector created by studiogstock - www.freepik.com</a>\n                </div> */}\n                <div className=\"editor-footer-language editor-footer-text\" onClick={handleOpen}>\n                    {language.toUpperCase()[0] + language.slice(1)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditorWrapper","import TextEditor from \"./TextEditor\"\nimport EditorWrapper from \"./EditorWrapper\"\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\"\nimport { v4 as uuidV4 } from \"uuid\"\nimport ThemeContextProvider from \"./ThemeContext\"\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/:id\">\n          <ThemeContextProvider>\n            <EditorWrapper />\n          </ThemeContextProvider>\n          {/* <TextEditor /> */}\n        </Route>\n        <Route path=\"/\">\n          <Redirect to={`/${uuidV4()}`}/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}